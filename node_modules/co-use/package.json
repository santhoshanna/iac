{
  "_args": [
    [
      {
        "raw": "co-use@^1.1.0",
        "scope": null,
        "escapedName": "co-use",
        "name": "co-use",
        "rawSpec": "^1.1.0",
        "spec": ">=1.1.0 <2.0.0",
        "type": "range"
      },
      "C:\\Personal\\jcibts-rest-face\\node_modules\\co-bluebird"
    ]
  ],
  "_from": "co-use@>=1.1.0 <2.0.0",
  "_id": "co-use@1.1.0",
  "_inCache": true,
  "_location": "/co-use",
  "_npmUser": {
    "name": "overlookmotel",
    "email": "theoverlookmotel@gmail.com"
  },
  "_npmVersion": "1.4.28",
  "_phantomChildren": {},
  "_requested": {
    "raw": "co-use@^1.1.0",
    "scope": null,
    "escapedName": "co-use",
    "name": "co-use",
    "rawSpec": "^1.1.0",
    "spec": ">=1.1.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/co-bluebird"
  ],
  "_resolved": "https://registry.npmjs.org/co-use/-/co-use-1.1.0.tgz",
  "_shasum": "c6bb3cdf10cb735ecaa9daeeda46d725c94a4e62",
  "_shrinkwrap": null,
  "_spec": "co-use@^1.1.0",
  "_where": "C:\\Personal\\jcibts-rest-face\\node_modules\\co-bluebird",
  "author": {
    "name": "Overlook Motel"
  },
  "bugs": {
    "url": "https://github.com/overlookmotel/co-use/issues"
  },
  "dependencies": {},
  "description": "co using your choice of promise implementation",
  "devDependencies": {
    "bluebird": "^2.10.0",
    "chai": "^3.2.0",
    "coveralls": "^2.11.4",
    "fs-extra-promise": "^0.2.1",
    "istanbul": "^0.3.19",
    "jshint": "^2.8.0",
    "lodash": "^3.10.1",
    "mocha": "^2.3.2",
    "mz": "^1.0.2",
    "npm-web-api": "^0.1.1"
  },
  "directories": {},
  "dist": {
    "shasum": "c6bb3cdf10cb735ecaa9daeeda46d725c94a4e62",
    "tarball": "https://registry.npmjs.org/co-use/-/co-use-1.1.0.tgz"
  },
  "engines": {
    "node": ">=0.12.0"
  },
  "gitHead": "10661236f14654e753e5d29b9350e5d979578593",
  "homepage": "https://github.com/overlookmotel/co-use#readme",
  "keywords": [
    "co",
    "use",
    "promise",
    "choice",
    "bluebird"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/overlookmotel/co-use/raw/master/License"
    }
  ],
  "main": "./lib/",
  "maintainers": [
    {
      "name": "overlookmotel",
      "email": "theoverlookmotel@gmail.com"
    }
  ],
  "name": "co-use",
  "optionalDependencies": {},
  "readme": "# co-use.js\n\n# co using your choice of promise implementation\n\n## Current status\n\n[![NPM version](https://img.shields.io/npm/v/co-use.svg)](https://www.npmjs.com/package/co-use)\n[![Build Status](https://img.shields.io/travis/overlookmotel/co-use/master.svg)](http://travis-ci.org/overlookmotel/co-use)\n[![Dependency Status](https://img.shields.io/david/overlookmotel/co-use.svg)](https://david-dm.org/overlookmotel/co-use)\n[![Dev dependency Status](https://img.shields.io/david/dev/overlookmotel/co-use.svg)](https://david-dm.org/overlookmotel/co-use)\n[![Coverage Status](https://img.shields.io/coveralls/overlookmotel/co-use/master.svg)](https://coveralls.io/r/overlookmotel/co-use)\n\n## What's it for?\n\n[co](https://www.npmjs.com/package/co) is a brilliant module which allows you to code async code in a sync style using generators and `yield`.\n\nFunctions which use `co` return a promise.\n\nThe problem is that the promise implementation used within `co` is the native Javascript Promise and co doesn't make it possible to use an alternative implementation, for example [bluebird](https://www.npmjs.com/package/bluebird).\n\nThis module adds an extra method `.use()` which allows the use of any promise implementation you like within `co`.\n\n## Usage\n\n### `co.use(Promise)`\n\nCreates a new instance of `co`, which uses the Promise implementation provided.\n\n```js\nvar Bluebird = require('bluebird');\nvar co = require('co-use').use(Bluebird);\n\n// now use `co` in the usual way\nvar p = co(function* () {});\n\nconsole.log(p instanceof Bluebird); // true\n```\n\n### Other methods\n\nAll other methods are the same as normal [co](https://www.npmjs.com/package/co).\n\n## Building co-use\n\nI requested that this functionality be included in `co` ([PR](https://github.com/tj/co/pull/226)) but so far it has not.\n\nSo this module is made by loading `co` and wrapping the code to add the `.use()` method. I will endeavour to update this module when new versions of co are released. The version of `co` currently used is `v4.6.0`.\n\nIf you wish to build `co-use` with the most recent version of `co`, do the following:\n\n1. Fork `co-use` from Github\n2. Go to the directory of the fork\n3. Run the following code:\n\n```\nnpm install\nnpm run build\n```\n\nPlease feel free to raise a PR with the updated build.\n\n## Tests\n\nUse `npm test` to run the tests. Use `npm run cover` to check coverage.\n\n## Changelog\n\nSee [changelog.md](https://github.com/overlookmotel/co-use/blob/master/changelog.md)\n\n## Issues\n\nIf you discover a bug, please raise an issue on Github. https://github.com/overlookmotel/co-use/issues\n\n## Contribution\n\nPull requests are very welcome. Please:\n\n* ensure all tests pass before submitting PR\n* add an entry to changelog\n* add tests for new features\n* document new functionality/API additions in README\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/overlookmotel/co-use.git"
  },
  "scripts": {
    "build": "make build",
    "cover": "make cover",
    "test": "make test"
  },
  "version": "1.1.0"
}
