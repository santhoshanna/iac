{
  "_args": [
    [
      {
        "raw": "semaphore@1.0.5",
        "scope": null,
        "escapedName": "semaphore",
        "name": "semaphore",
        "rawSpec": "1.0.5",
        "spec": "1.0.5",
        "type": "version"
      },
      "C:\\Personal\\jcibts-rest-face\\node_modules\\documentdb"
    ]
  ],
  "_from": "semaphore@1.0.5",
  "_id": "semaphore@1.0.5",
  "_inCache": true,
  "_location": "/semaphore",
  "_nodeVersion": "6.0.0-pre",
  "_npmOperationalInternal": {
    "host": "packages-9-west.internal.npmjs.com",
    "tmp": "tmp/semaphore-1.0.5.tgz_1456608578363_0.32074872963130474"
  },
  "_npmUser": {
    "name": "sqrt",
    "email": "sqrt@entless.org"
  },
  "_npmVersion": "3.3.12",
  "_phantomChildren": {},
  "_requested": {
    "raw": "semaphore@1.0.5",
    "scope": null,
    "escapedName": "semaphore",
    "name": "semaphore",
    "rawSpec": "1.0.5",
    "spec": "1.0.5",
    "type": "version"
  },
  "_requiredBy": [
    "/documentdb"
  ],
  "_resolved": "https://registry.npmjs.org/semaphore/-/semaphore-1.0.5.tgz",
  "_shasum": "b492576e66af193db95d65e25ec53f5f19798d60",
  "_shrinkwrap": {
    "name": "semaphore",
    "version": "1.0.5",
    "dependencies": {}
  },
  "_spec": "semaphore@1.0.5",
  "_where": "C:\\Personal\\jcibts-rest-face\\node_modules\\documentdb",
  "bugs": {
    "url": "https://github.com/abrkn/semaphore.js/issues"
  },
  "dependencies": {},
  "description": "semaphore for node",
  "devDependencies": {
    "mocha": "2.x.x",
    "should": "8.x.x"
  },
  "directories": {},
  "dist": {
    "shasum": "b492576e66af193db95d65e25ec53f5f19798d60",
    "tarball": "https://registry.npmjs.org/semaphore/-/semaphore-1.0.5.tgz"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "gitHead": "4b7471c5efc348b3279621e58e0b47b55ac60040",
  "homepage": "https://github.com/abrkn/semaphore.js",
  "main": "./lib/semaphore.js",
  "maintainers": [
    {
      "name": "abrkn",
      "email": "andreas@opuno.com"
    },
    {
      "name": "sqrt",
      "email": "sqrt@entless.org"
    }
  ],
  "name": "semaphore",
  "optionalDependencies": {},
  "readme": "semaphore.js\n============\n\n[![Build Status](https://travis-ci.org/abrkn/semaphore.js.svg?branch=master)](https://travis-ci.org/abrkn/semaphore.js)\n\nInstall:\nnpm install semaphore\n\nLimit simultaneous access to a resource.\n\n```javascript\n// Create\nvar sem = require('semaphore')(capacity);\n\n// Take\nsem.take(fn[, n=1])\nsem.take(n, fn)\n\n// Leave\nsem.leave([n])\n```\n\n\n```javascript\n// Limit concurrent db access\nvar sem = require('semaphore')(1);\nvar server = require('http').createServer(req, res) {\n\tsem.take(function() {\n\t\texpensive_database_operation(function(err, res) {\n\t\t\tsem.leave();\n\n\t\t\tif (err) return res.end(\"Error\");\n\n\t\t\treturn res.end(res);\n\t\t});\n\t});\n});\n```\n\n```javascript\n// 2 clients at a time\nvar sem = require('semaphore')(2);\nvar server = require('http').createServer(req, res) {\n\tres.write(\"Then good day, madam!\");\n\n\tsem.take(function() {\n\t\tres.end(\"We hope to see you soon for tea.\");\n\t\tsem.leave();\n\t});\n});\n```\n\n```javascript\n// Rate limit\nvar sem = require('semaphore')(10);\nvar server = require('http').createServer(req, res) {\n\tsem.take(function() {\n\t\tres.end(\".\");\n\t\t\n\t\tsetTimeout(sem.leave, 500)\n\t});\n});\n```\n\nLicense\n===\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/abrkn/semaphore.js.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "1.0.5"
}
